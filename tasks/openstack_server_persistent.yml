---
- block:
  - name: 'Create host group'
    os_server_group:
      cloud: "{{ openstack_auth_cloud_name }}"
      name: "{{ target_args.group_name }}"
      region_name: "{{ openstack_region }}"
      state: "{{ target_state }}"
      policies: "{{ target_args.group_policies }}"
    when: target_args.group_name is defined

  - name: 'Create host'
    os_server:
      cloud: "{{ openstack_auth_cloud_name }}"
      name: "{{ target_args.name }}"
      state: 'present'
      image: "{{ target_args.image }}"
      flavor: "{{ target_args.flavor }}"
      region_name: "{{ openstack_region }}"
      public_ip: "{{ target_args.public | default(false) }}"
      boot_from_volume: true
      terminate_volume: true
      volume_size: "{{ target_args.disk_gb }}"
      key_name: "{{ openstack_ssh_key_name }}"
      nics: "{{ target_args.networks }}"
      security_groups: "{{ target_args.security_groups | default('') }}"
      meta:
        hostname: "{{ target_args.name }}"
        group: "{{ target_args.group_name }}"
      userdata: "{{ target_args.customization | default('') }}"

  - name: 'Associate floating IP'
    block:
      - name: 'Associate floating IP from pool'
        os_floating_ip:
          cloud: "{{ openstack_auth_cloud_name }}"
          state: 'present'
          server: "{{ target_args.name }}"
          reuse: true
          network: "{{ target_args.floating.pool }}"
          nat_destination: "{{ target_args.floating.nat_destination }}"
        when: target_args.floating.ip is not defined
      - name: 'Associate fixed floating IP'
        os_floating_ip:
          cloud: "{{ openstack_auth_cloud_name }}"
          state: 'present'
          server: "{{ target_args.name }}"
          reuse: true
          network: "{{ target_args.floating.pool }}"
          nat_destination: "{{ target_args.floating.nat_destination }}"
          floating_ip_address: "{{ target_args.floating.ip }}"
        when: target_args.floating.ip is defined
    when: target_args.floating is defined
  when: target_state == 'present'

- name: 'Remove host'
  os_server:
    cloud: "{{ openstack_auth_cloud_name }}"
    name: "{{ target_args.name }}"
    region_name: "{{ openstack_region }}"
    state: 'absent'
  when: target_state == 'absent'
