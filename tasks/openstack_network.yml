---
- block:
  - name: 'Get network ID (remove only)'
    os_networks_facts:
      cloud: "{{ openstack_auth_cloud_name }}"
      name: "net-{{ target_args.name }}"

  - name: 'List ports (remove only)'
    os_port_facts:
      cloud: "{{ openstack_auth_cloud_name }}"
      filters:
        network_id: "{{ openstack_networks[0]['id'] }}"

  - name: 'Remove ports (remove only)'
    os_port:
      cloud: "{{ openstack_auth_cloud_name }}"
      name: "{{ port.id }}"
      state: 'absent'
    loop: "{{ openstack_ports | default([])}}"
    loop_control:
      loop_var: 'port'
  when: target_state == 'absent'

- name: 'Ensure network'
  os_network:
    cloud: "{{ openstack_auth_cloud_name }}"
    state: "{{ target_state }}"
    name: "net-{{ target_args.name }}"
    external: "{{ target_args.external | default(false) }}"
    region_name: "{{ openstack_region }}"
  register: 'network_created'
  retries: 3
  delay: 60
  until: not network_created.failed

- block:
  - name: 'Create subnet'
    os_subnet:
      cloud: "{{ openstack_auth_cloud_name }}"
      name: "subnet-{{ target_args.name }}"
      state: "{{ target_state }}"
      region_name: "{{ openstack_region }}"
      network_name: "net-{{ target_args.name }}"
      cidr: "{{ target_args.subnet }}"
      gateway_ip: "{{ target_args.gateway }}"
      host_routes: "{{ target_args.routes | default([]) }}"
      enable_dhcp: "{{ target_args.dhcp_enabled }}"
      dns_nameservers: "{{ target_args.dns | default([]) }}"
    when: target_args.gateway is defined

  - name: 'Create subnet'
    os_subnet:
      cloud: "{{ openstack_auth_cloud_name }}"
      name: "subnet-{{ target_args.name }}"
      state: "{{ target_state }}"
      region_name: "{{ openstack_region }}"
      network_name: "net-{{ target_args.name }}"
      cidr: "{{ target_args.subnet }}"
      no_gateway_ip: true
      host_routes: "{{ target_args.routes | default([]) }}"
      enable_dhcp: "{{ target_args.dhcp_enabled }}"
      dns_nameservers: "{{ target_args.dns | default([]) }}"
    when: target_args.gateway is not defined
  when: target_state == 'present'
