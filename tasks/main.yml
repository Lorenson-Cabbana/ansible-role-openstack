---
- name: 'Check dependencies'
  python_requirements_facts:
    dependencies:
      - 'openstacksdk'
  register: 'openstack_deps'
  loop: "{{ query('inventory_hostnames', '{{ ansible_play_hosts }}' ) }}"

- name: 'Install dependencies'
  include_tasks: 'openstack_install.yml'
  loop: "{{ openstack_deps['results'] }}"
  when:
    - item.not_found | length != 0

- name: "Load {{ target_action }} variables"
  include_vars: "openstack_{{ target_action }}.yml"
  ignore_errors: true

- block:
  - name: 'Check for complete input, skip is OK'
    fail:
      msg: 'Missing input, please check documentation'
    when: target_state is not defined

  - name: 'Check if state is allowed, skip is OK'
    fail:
      msg: 'Invalid/unsuppored state!'
    when: target_state not in supported_states
  when: supported_states is defined

- block:
  - name: 'Check required config dirs'
    file:
      state: 'directory'
      path: "{{ ansible_env.HOME }}/{{ config_dir }}"
    loop:
      - '.config/openstack'
      - '.ssh'
    loop_control:
      loop_var: 'config_dir'

  - name: 'Check OpenstackSDK config file'
    template:
      src: 'clouds.yml.j2'
      dest: "{{ ansible_env.HOME }}/.config/openstack/clouds.yml"
      mode: 0440

  - name: 'Register keypair in Openstack'
    block:
      - name: 'Check SSH keypair in Openstack'
        os_keypair:
          cloud: "{{ openstack_auth_cloud_name }}"
          state: 'present'
          name: "{{ openstack_ssh_key_name }}"
          public_key_file: "{{ ansible_env.HOME }}/.ssh/{{ openstack_ssh_key_file }}.pub"
    rescue:
      - name: 'Create RSA SSH keypair'
        openssh_keypair:
          path: "{{ ansible_env.HOME }}/.ssh/{{ openstack_ssh_key_file }}"
          type: 'rsa'
          size: 4096
      - name: 'Register keypair in Openstack'
        os_keypair:
          cloud: "{{ openstack_auth_cloud_name }}"
          state: 'present'
          name: "{{ openstack_ssh_key_name }}"
          public_key_file: "{{ ansible_env.HOME }}/.ssh/{{ openstack_ssh_key_file }}.pub"
  when: openstack_auth_source == 'file'

- block:
  - name: 'Register Tower SSH key in Openstack'
    os_keypair:
      cloud: "{{ openstack_auth_cloud_name }}"
      state: 'present'
      name: "{{ openstack_ssh_key_name }}"
      public_key: "{{ openstack_ssh_public_key }}"
  when: openstack_auth_source == 'tower'

- name: "Run {{ target_action }} playbook"
  include_tasks: "openstack_{{ target_action }}.yml"
